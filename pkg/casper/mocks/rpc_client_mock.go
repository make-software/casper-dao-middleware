// Code generated by MockGen. DO NOT EDIT.
// Source: ./rpc_client.go

// Package mocks is a generated GoMock package.
package mocks

import (
	casper "casper-dao-middleware/pkg/casper"
	big "math/big"
	reflect "reflect"

	keypair "github.com/casper-ecosystem/casper-golang-sdk/keypair"
	gomock "github.com/golang/mock/gomock"
)

// MockRPCClient is a mock of RPCClient interface.
type MockRPCClient struct {
	ctrl     *gomock.Controller
	recorder *MockRPCClientMockRecorder
}

// MockRPCClientMockRecorder is the mock recorder for MockRPCClient.
type MockRPCClientMockRecorder struct {
	mock *MockRPCClient
}

// NewMockRPCClient creates a new mock instance.
func NewMockRPCClient(ctrl *gomock.Controller) *MockRPCClient {
	mock := &MockRPCClient{ctrl: ctrl}
	mock.recorder = &MockRPCClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRPCClient) EXPECT() *MockRPCClientMockRecorder {
	return m.recorder
}

// GetAccountBalance mocks base method.
func (m *MockRPCClient) GetAccountBalance(stateRootHash, balanceUref string) (big.Int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccountBalance", stateRootHash, balanceUref)
	ret0, _ := ret[0].(big.Int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccountBalance indicates an expected call of GetAccountBalance.
func (mr *MockRPCClientMockRecorder) GetAccountBalance(stateRootHash, balanceUref interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccountBalance", reflect.TypeOf((*MockRPCClient)(nil).GetAccountBalance), stateRootHash, balanceUref)
}

// GetAccountBalanceByKeypair mocks base method.
func (m *MockRPCClient) GetAccountBalanceByKeypair(stateRootHash string, key keypair.KeyPair) (big.Int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccountBalanceByKeypair", stateRootHash, key)
	ret0, _ := ret[0].(big.Int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccountBalanceByKeypair indicates an expected call of GetAccountBalanceByKeypair.
func (mr *MockRPCClientMockRecorder) GetAccountBalanceByKeypair(stateRootHash, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccountBalanceByKeypair", reflect.TypeOf((*MockRPCClient)(nil).GetAccountBalanceByKeypair), stateRootHash, key)
}

// GetAccountMainPurseURef mocks base method.
func (m *MockRPCClient) GetAccountMainPurseURef(accountHash string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccountMainPurseURef", accountHash)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccountMainPurseURef indicates an expected call of GetAccountMainPurseURef.
func (mr *MockRPCClientMockRecorder) GetAccountMainPurseURef(accountHash interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccountMainPurseURef", reflect.TypeOf((*MockRPCClient)(nil).GetAccountMainPurseURef), accountHash)
}

// GetAuctionState mocks base method.
func (m *MockRPCClient) GetAuctionState() (casper.StateGetAuctionInfoResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAuctionState")
	ret0, _ := ret[0].(casper.StateGetAuctionInfoResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAuctionState indicates an expected call of GetAuctionState.
func (mr *MockRPCClientMockRecorder) GetAuctionState() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAuctionState", reflect.TypeOf((*MockRPCClient)(nil).GetAuctionState))
}

// GetBlockByHash mocks base method.
func (m *MockRPCClient) GetBlockByHash(hash string) (casper.GetBlockResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlockByHash", hash)
	ret0, _ := ret[0].(casper.GetBlockResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlockByHash indicates an expected call of GetBlockByHash.
func (mr *MockRPCClientMockRecorder) GetBlockByHash(hash interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlockByHash", reflect.TypeOf((*MockRPCClient)(nil).GetBlockByHash), hash)
}

// GetBlockByHeight mocks base method.
func (m *MockRPCClient) GetBlockByHeight(height uint64) (casper.GetBlockResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlockByHeight", height)
	ret0, _ := ret[0].(casper.GetBlockResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlockByHeight indicates an expected call of GetBlockByHeight.
func (mr *MockRPCClientMockRecorder) GetBlockByHeight(height interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlockByHeight", reflect.TypeOf((*MockRPCClient)(nil).GetBlockByHeight), height)
}

// GetBlockTransfersByHash mocks base method.
func (m *MockRPCClient) GetBlockTransfersByHash(blockHash string) (casper.GetBlockTransfersResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlockTransfersByHash", blockHash)
	ret0, _ := ret[0].(casper.GetBlockTransfersResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlockTransfersByHash indicates an expected call of GetBlockTransfersByHash.
func (mr *MockRPCClientMockRecorder) GetBlockTransfersByHash(blockHash interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlockTransfersByHash", reflect.TypeOf((*MockRPCClient)(nil).GetBlockTransfersByHash), blockHash)
}

// GetBlockTransfersByHeight mocks base method.
func (m *MockRPCClient) GetBlockTransfersByHeight(height uint64) (casper.GetBlockTransfersResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlockTransfersByHeight", height)
	ret0, _ := ret[0].(casper.GetBlockTransfersResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlockTransfersByHeight indicates an expected call of GetBlockTransfersByHeight.
func (mr *MockRPCClientMockRecorder) GetBlockTransfersByHeight(height interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlockTransfersByHeight", reflect.TypeOf((*MockRPCClient)(nil).GetBlockTransfersByHeight), height)
}

// GetDeploy mocks base method.
func (m *MockRPCClient) GetDeploy(hash string) (casper.GetDeployResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDeploy", hash)
	ret0, _ := ret[0].(casper.GetDeployResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDeploy indicates an expected call of GetDeploy.
func (mr *MockRPCClientMockRecorder) GetDeploy(hash interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDeploy", reflect.TypeOf((*MockRPCClient)(nil).GetDeploy), hash)
}

// GetDictionaryItem mocks base method.
func (m *MockRPCClient) GetDictionaryItem(stateRootHash, uref, key string) (casper.StateGetItemResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDictionaryItem", stateRootHash, uref, key)
	ret0, _ := ret[0].(casper.StateGetItemResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDictionaryItem indicates an expected call of GetDictionaryItem.
func (mr *MockRPCClientMockRecorder) GetDictionaryItem(stateRootHash, uref, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDictionaryItem", reflect.TypeOf((*MockRPCClient)(nil).GetDictionaryItem), stateRootHash, uref, key)
}

// GetEraInfoBySwitchBlockHeight mocks base method.
func (m *MockRPCClient) GetEraInfoBySwitchBlockHeight(height uint64) (casper.GetEraInfoBySwitchBlockResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEraInfoBySwitchBlockHeight", height)
	ret0, _ := ret[0].(casper.GetEraInfoBySwitchBlockResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEraInfoBySwitchBlockHeight indicates an expected call of GetEraInfoBySwitchBlockHeight.
func (mr *MockRPCClientMockRecorder) GetEraInfoBySwitchBlockHeight(height interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEraInfoBySwitchBlockHeight", reflect.TypeOf((*MockRPCClient)(nil).GetEraInfoBySwitchBlockHeight), height)
}

// GetLatestBlock mocks base method.
func (m *MockRPCClient) GetLatestBlock() (casper.GetBlockResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestBlock")
	ret0, _ := ret[0].(casper.GetBlockResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestBlock indicates an expected call of GetLatestBlock.
func (mr *MockRPCClientMockRecorder) GetLatestBlock() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestBlock", reflect.TypeOf((*MockRPCClient)(nil).GetLatestBlock))
}

// GetLatestBlockTransfers mocks base method.
func (m *MockRPCClient) GetLatestBlockTransfers() (casper.GetBlockTransfersResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestBlockTransfers")
	ret0, _ := ret[0].(casper.GetBlockTransfersResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestBlockTransfers indicates an expected call of GetLatestBlockTransfers.
func (mr *MockRPCClientMockRecorder) GetLatestBlockTransfers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestBlockTransfers", reflect.TypeOf((*MockRPCClient)(nil).GetLatestBlockTransfers))
}

// GetLatestStateRootHash mocks base method.
func (m *MockRPCClient) GetLatestStateRootHash() (casper.GetStateRootHashResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestStateRootHash")
	ret0, _ := ret[0].(casper.GetStateRootHashResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestStateRootHash indicates an expected call of GetLatestStateRootHash.
func (mr *MockRPCClientMockRecorder) GetLatestStateRootHash() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestStateRootHash", reflect.TypeOf((*MockRPCClient)(nil).GetLatestStateRootHash))
}

// GetNodeStatus mocks base method.
func (m *MockRPCClient) GetNodeStatus(nodeIP string) (casper.NodeStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNodeStatus", nodeIP)
	ret0, _ := ret[0].(casper.NodeStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNodeStatus indicates an expected call of GetNodeStatus.
func (mr *MockRPCClientMockRecorder) GetNodeStatus(nodeIP interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNodeStatus", reflect.TypeOf((*MockRPCClient)(nil).GetNodeStatus), nodeIP)
}

// GetPeers mocks base method.
func (m *MockRPCClient) GetPeers() (casper.PeerResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPeers")
	ret0, _ := ret[0].(casper.PeerResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPeers indicates an expected call of GetPeers.
func (mr *MockRPCClientMockRecorder) GetPeers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPeers", reflect.TypeOf((*MockRPCClient)(nil).GetPeers))
}

// GetStateItem mocks base method.
func (m *MockRPCClient) GetStateItem(stateRootHash, key string, path []string) (casper.StateGetItemResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStateItem", stateRootHash, key, path)
	ret0, _ := ret[0].(casper.StateGetItemResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStateItem indicates an expected call of GetStateItem.
func (mr *MockRPCClientMockRecorder) GetStateItem(stateRootHash, key, path interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStateItem", reflect.TypeOf((*MockRPCClient)(nil).GetStateItem), stateRootHash, key, path)
}

// GetStateRootHashByHash mocks base method.
func (m *MockRPCClient) GetStateRootHashByHash(stateRootHash string) (casper.GetStateRootHashResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStateRootHashByHash", stateRootHash)
	ret0, _ := ret[0].(casper.GetStateRootHashResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStateRootHashByHash indicates an expected call of GetStateRootHashByHash.
func (mr *MockRPCClientMockRecorder) GetStateRootHashByHash(stateRootHash interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStateRootHashByHash", reflect.TypeOf((*MockRPCClient)(nil).GetStateRootHashByHash), stateRootHash)
}

// GetStateRootHashByHeight mocks base method.
func (m *MockRPCClient) GetStateRootHashByHeight(height uint64) (casper.GetStateRootHashResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStateRootHashByHeight", height)
	ret0, _ := ret[0].(casper.GetStateRootHashResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStateRootHashByHeight indicates an expected call of GetStateRootHashByHeight.
func (mr *MockRPCClientMockRecorder) GetStateRootHashByHeight(height interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStateRootHashByHeight", reflect.TypeOf((*MockRPCClient)(nil).GetStateRootHashByHeight), height)
}

// GetStatus mocks base method.
func (m *MockRPCClient) GetStatus() (casper.StatusResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStatus")
	ret0, _ := ret[0].(casper.StatusResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStatus indicates an expected call of GetStatus.
func (mr *MockRPCClientMockRecorder) GetStatus() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStatus", reflect.TypeOf((*MockRPCClient)(nil).GetStatus))
}
