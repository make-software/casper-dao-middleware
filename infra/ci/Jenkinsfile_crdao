def buildNumber = env.BUILD_NUMBER as int
if (buildNumber > 1) milestone(buildNumber - 1)
milestone(buildNumber)

pipeline {

  agent any

  environment {
    DR2 = credentials('DR2')
    registry = '$DR2/make/crdao'
    api_app = 'api'
    handler_app = 'handler'
    dockerImageApi = '/$api_app'
    dockerImageHandler = '/$handler_app'
    GIT_HASH = GIT_COMMIT.take(7)
  }

  stages {

    stage('Build image CrDAO API') {
      when {
        anyOf {
          branch "master";
          branch "rc-*"
        }
      }
      steps {
        script {
          sh "until docker ps; do sleep 3; done && docker build -t $registry$dockerImageApi:${env.GIT_HASH} -f infra/docker/api.dockerfile . "
        }
      }
   }

    stage('Build image CrDAO Handler') {
      when {
        anyOf {
          branch "master";
          branch "rc-*"
        }
      }
      steps {
        script {
          sh "until docker ps; do sleep 3; done && docker build -t $registry$dockerImageHandler:${env.GIT_HASH} -f infra/docker/handler.dockerfile . "
        }
      }
   }

    stage('Push image CrDAO API') {
      when {
        anyOf {
          branch "master";
          branch "rc-*"
        }
      }
        steps {
            script {
                docker.withRegistry('', '') {
                    sh "docker push $registry$dockerImageApi:${env.GIT_HASH}"
                }
            }
        }
    }

    stage('Push image CrDAO Handler') {
      when {
        anyOf {
          branch "master";
          branch "rc-*"
        }
      }
        steps {
            script {
                docker.withRegistry('', '') {
                    sh "docker push $registry$dockerImageHandler:${env.GIT_HASH}"
                }
            }
        }
    }

    stage('Clone casper-infra repo') {
      when {
        anyOf {
          branch "master";
          branch "rc-*"
        }
      }
      environment {
        GIT_CREDS_USR = credentials('repo-git-user')
        GIT_CREDS_PSW = credentials('repo-git-pass')
      }
      steps {
        sh "git clone https://$GIT_CREDS_USR:$GIT_CREDS_PSW@bitbucket.org/makellc/casper-infra.git"
        sh 'git config --global user.email \'jenkins@make.servies\''
        sh 'git config --global user.name "Jenkins CI"'
      }
   }

    stage('DEV') {
      when { branch 'master' }
        environment {
          env = 'dev'
        }
        steps {
          dir(path: 'casper-infra') {
            sh 'cd ./kubernetes/environment/$env/crdao && pwd && ls -la && sed -i "s|/$api_app.*|/$api_app:$GIT_HASH|g" crdao-$api_app.yaml'
            sh 'cd ./kubernetes/environment/$env/crdao && pwd && ls -la && sed -i "s|/$handler_app.*|/$handler_app:$GIT_HASH|g" crdao-$handler_app.yaml'
            sh 'git status && git commit -am "$api_app-$env and $handler_app-$env releasing from branch $BRANCH_NAME" && pwd && ls -la && chmod a+x ../infra/ci/push.sh && ../infra/ci/push.sh || echo \'no changes\''
          }
        }
     }

    stage('STG') {
      when { branch 'rc-*' }
        environment {
          env = 'stg'
        }
        steps {
          dir(path: 'casper-infra') {
            sh 'cd ./kubernetes/environment/$env/crdao && pwd && ls -la && sed -i "s|/$api_app.*|/$api_app:$GIT_HASH|g" crdao-$api_app.yaml'
            sh 'cd ./kubernetes/environment/$env/crdao && pwd && ls -la && sed -i "s|/$handler_app.*|/$handler_app:$GIT_HASH|g" crdao-$handler_app.yaml'
            sh 'git status && git commit -am "$api_app-$env and $handler_app-$env releasing from branch $BRANCH_NAME" && pwd && ls -la && chmod a+x ../infra/ci/push.sh && ../infra/ci/push.sh || echo \'no changes\''
          }
        }
     }
  }
}
