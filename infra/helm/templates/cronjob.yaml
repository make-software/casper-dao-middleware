---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Chart.Name }}
spec:
  startingDeadlineSeconds: {{ .Values.rateOracle.startingDeadlineSeconds }}
  concurrencyPolicy: "Forbid"
  suspend: {{ .Values.rateOracle.suspend }}
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  schedule: "{{ .Values.rateOracle.schedule }}"
  jobTemplate:
    spec:
      template:
        spec:
          {{- with .Values.rateOracle.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.rateOracle.dbMigration.enabled }}
          initContainers:
          - name: db-migration
            image: {{ .Values.rateOracle.image.repository }}:{{ .Values.rateOracle.image.tag }}
            command: ["/bin/sh", "-c"]
            # For cron we need only initial network specific migrations to be running since it will be deployed to sync up historical network state only
            args:
              - echo ------- migration start ------- &&
                echo EXCHANGE RATE &&
                (sync-db.sh $EXCHANGE_RATE_DATABASE_URI /app/resources/exchange-rate/rates-migrations/general) || true &&
                echo ------- migration finish ------
            env:
            {{- range $key, $value := .Values.rateOracle.env.normal }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $key, $value := .Values.rateOracle.env.secret }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Chart.Name }}
                  key: {{ $key }}
            {{- end }}
          {{- end }}
          containers:
          - name: {{ .Chart.Name }}
            image: {{ .Values.rateOracle.image.repository }}:{{ .Values.rateOracle.image.tag }}
            command:
            - /bin/sh
            - -c
            - /app/rate-oracle
            env:
            {{- range $key, $value := .Values.rateOracle.env.normal }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $key, $value := .Values.rateOracle.env.secret }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Chart.Name }}
                  key: {{ $key }}
            {{- end }}
          restartPolicy: OnFailure