definitions:
  entities.Account:
    properties:
      hash:
        type: string
      is_kyc:
        type: boolean
      is_va:
        type: boolean
      timestamp:
        type: string
    type: object
  entities.AuctionTypeID:
    enum:
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - AuctionTypeIDInternal
    - AuctionTypeIDExternal
  entities.Bid:
    properties:
      bid_id:
        type: integer
      cspr_stake:
        type: integer
      deploy_hash:
        type: string
      job_offer_id:
        type: integer
      onboard:
        type: boolean
      picked_by_job_poster:
        type: boolean
      proposed_payment:
        type: integer
      proposed_time_frame:
        type: integer
      reputation_stake:
        type: integer
      timestamp:
        type: string
      worker:
        type: string
    type: object
  entities.Job:
    properties:
      bid_id:
        type: integer
      caller:
        type: string
      deploy_hash:
        type: string
      finish_time:
        type: integer
      job_poster:
        type: string
      job_status_id:
        $ref: '#/definitions/entities.JobStatusID'
      result:
        type: string
      timestamp:
        type: string
      worker:
        type: string
    type: object
  entities.JobOffer:
    properties:
      auction_type_id:
        $ref: '#/definitions/entities.AuctionTypeID'
      deploy_hash:
        type: string
      expected_time_frame:
        type: integer
      job_offer_id:
        type: integer
      job_poster:
        type: string
      max_budget:
        type: integer
      timestamp:
        type: string
    type: object
  entities.JobStatusID:
    enum:
    - 1
    - 2
    - 3
    - 4
    - 5
    type: integer
    x-enum-varnames:
    - JobStatusIDCreated
    - JobStatusIDSubmitted
    - JobStatusIDCancelled
    - JobStatusIDDone
    - JobStatusIDRejected
  entities.ReputationChangeReason:
    enum:
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    type: integer
    x-enum-varnames:
    - ReputationChangeReasonMinted
    - ReputationChangeReasonBurned
    - ReputationChangeReasonStaked
    - ReputationChangeReasonVotingGained
    - ReputationChangeReasonVotingLost
    - ReputationChangeReasonUnstaked
  entities.Setting:
    properties:
      name:
        type: string
      value:
        type: string
    type: object
  entities.TotalReputationSnapshot:
    properties:
      address:
        type: string
      deploy_hash:
        type: string
      reason:
        $ref: '#/definitions/entities.ReputationChangeReason'
      timestamp:
        type: string
      total_liquid_reputation:
        type: integer
      total_staked_reputation:
        type: integer
      voting_earned_reputation:
        type: integer
      voting_id:
        type: integer
      voting_lost_reputation:
        type: integer
    type: object
  entities.Vote:
    properties:
      address:
        type: string
      amount:
        type: integer
      deploy_hash:
        type: string
      is_canceled:
        type: boolean
      is_in_favour:
        type: boolean
      timestamp:
        type: string
      voting_id:
        type: integer
    type: object
  entities.Voting:
    properties:
      config_time_between_informal_and_formal_voting:
        type: integer
      config_total_onboarded:
        type: integer
      config_voting_clearness_delta:
        type: integer
      creator:
        type: string
      deploy_hash:
        type: string
      formal_voting_ends_at:
        type: string
      formal_voting_quorum:
        type: integer
      formal_voting_result:
        type: integer
      formal_voting_starts_at:
        type: string
      formal_voting_time:
        type: integer
      informal_voting_ends_at:
        type: string
      informal_voting_quorum:
        type: integer
      informal_voting_result:
        type: integer
      informal_voting_starts_at:
        type: string
      is_canceled:
        type: boolean
      metadata:
        items:
          type: integer
        type: array
      voting_id:
        type: integer
      voting_type_id:
        $ref: '#/definitions/entities.VotingTypeID'
    type: object
  entities.VotingTypeID:
    enum:
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    type: integer
    x-enum-varnames:
    - VotingTypeSimple
    - VotingTypeSlashing
    - VotingTypeKYC
    - VotingTypeRepo
    - VotingTypeReputation
    - VotingTypeOnboarding
    - VotingTypeAdmin
    - VotingTypeBidEscrow
  http_response.ErrorResponse:
    properties:
      error:
        $ref: '#/definitions/http_response.ErrorResult'
    type: object
  http_response.ErrorResult:
    properties:
      code:
        type: string
      description:
        type: string
      message:
        type: string
    type: object
  http_response.PaginatedResponse:
    properties:
      data: {}
      item_count:
        type: integer
      page_count:
        type: integer
    type: object
  http_response.SuccessResponse:
    properties:
      data: {}
    type: object
info:
  contact: {}
  title: Casper-CRDao API
  version: 0.0.1
paths:
  /accounts:
    get:
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: "10"
        description: Number of items per page
        in: query
        name: page_size
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_response.PaginatedResponse'
            - properties:
                data:
                  $ref: '#/definitions/entities.Account'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
      summary: Return paginated list of accounts
      tags:
      - Vote
  /accounts/{address}:
    get:
      parameters:
      - description: Hash or PublicKey
        in: path
        maxLength: 66
        name: address
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_response.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/entities.Account'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
      summary: Return account by its address
      tags:
      - Vote
  /accounts/{address}/total-reputation-snapshots:
    get:
      parameters:
      - description: Hash or PublicKey
        in: path
        maxLength: 66
        name: address
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_response.PaginatedResponse'
            - properties:
                data:
                  $ref: '#/definitions/entities.TotalReputationSnapshot'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
      summary: Return paginated list of total-reputation-snapshots for account
      tags:
      - Reputation
  /accounts/{address}/votes:
    get:
      parameters:
      - description: Hash or PublicKey
        in: path
        maxLength: 66
        name: address
        required: true
        type: string
      - description: Optional fields' schema (voting{})
        in: query
        name: includes
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: "10"
        description: Number of items per page
        in: query
        name: page_size
        type: string
      - default: ASC
        description: Sorting direction
        enum:
        - ASC
        - DESC
        in: query
        name: order_direction
        type: string
      - collectionFormat: csv
        default: voting_id
        description: Comma-separated list of sorting fields (voting_id,address)
        in: query
        items:
          type: string
        name: order_by
        type: array
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_response.PaginatedResponse'
            - properties:
                data:
                  $ref: '#/definitions/entities.Vote'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
      summary: Return paginated list of votes for address
      tags:
      - Vote
  /bids/{bid_id}/job:
    get:
      parameters:
      - description: BidID uint
        in: path
        name: bid_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_response.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/entities.Job'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
      summary: Return Job by BidID
      tags:
      - BidEscrow
  /job-offers:
    get:
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: "10"
        description: Number of items per page
        in: query
        name: page_size
        type: string
      - default: ASC
        description: Sorting direction
        enum:
        - ASC
        - DESC
        in: query
        name: order_direction
        type: string
      - collectionFormat: csv
        default: voting_id
        description: Comma-separated list of sorting fields (job_offer_id)
        in: query
        items:
          type: string
        name: order_by
        type: array
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_response.PaginatedResponse'
            - properties:
                data:
                  $ref: '#/definitions/entities.JobOffer'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
      summary: Return paginated list of votes for votingID
      tags:
      - BidEscrow
  /job-offers/{job_offer_id}/bids:
    get:
      parameters:
      - description: JobOfferID uint
        in: path
        name: job_offer_id
        required: true
        type: integer
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: "10"
        description: Number of items per page
        in: query
        name: page_size
        type: string
      - default: ASC
        description: Sorting direction
        enum:
        - ASC
        - DESC
        in: query
        name: order_direction
        type: string
      - collectionFormat: csv
        default: voting_id
        description: Comma-separated list of sorting fields (job_offer_id)
        in: query
        items:
          type: string
        name: order_by
        type: array
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_response.PaginatedResponse'
            - properties:
                data:
                  $ref: '#/definitions/entities.Bid'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
      summary: Return paginated list of bid for JobOffer
      tags:
      - BidEscrow
  /job-statuses:
    get:
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_response.SuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/entities.Job'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
      summary: Return predefined list of JobStatuses
      tags:
      - BidEscrow
  /settings:
    get:
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: "10"
        description: Number of items per page
        in: query
        name: page_size
        type: string
      - default: ASC
        description: Sorting direction
        enum:
        - ASC
        - DESC
        in: query
        name: order_direction
        type: string
      - collectionFormat: csv
        default: voting_id
        description: Comma-separated list of sorting fields (name)
        in: query
        items:
          type: string
        name: order_by
        type: array
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_response.PaginatedResponse'
            - properties:
                data:
                  $ref: '#/definitions/entities.Setting'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
      summary: Return paginated list of settings
      tags:
      - Setting
  /votings:
    get:
      parameters:
      - description: Optional fields' schema (votes_number{}, account_vote(hash))
        in: query
        name: includes
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: "10"
        description: Number of items per page
        in: query
        name: page_size
        type: string
      - default: ASC
        description: Sorting direction
        enum:
        - ASC
        - DESC
        in: query
        name: order_direction
        type: string
      - collectionFormat: csv
        default: voting_id
        description: Comma-separated list of sorting fields (voting_id)
        in: query
        items:
          type: string
        name: order_by
        type: array
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_response.PaginatedResponse'
            - properties:
                data:
                  $ref: '#/definitions/entities.Voting'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
      summary: Return paginated list of votings
      tags:
      - Voting
  /votings/{voting_id}/votes:
    get:
      parameters:
      - description: Comma-separated list of VotingIDs (number)
        in: query
        name: voting_id
        type: string
      - description: Optional fields' schema (voting{})
        in: query
        name: includes
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: "10"
        description: Number of items per page
        in: query
        name: page_size
        type: string
      - default: ASC
        description: Sorting direction
        enum:
        - ASC
        - DESC
        in: query
        name: order_direction
        type: string
      - collectionFormat: csv
        default: voting_id
        description: Comma-separated list of sorting fields (voting_id, address)
        in: query
        items:
          type: string
        name: order_by
        type: array
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_response.PaginatedResponse'
            - properties:
                data:
                  $ref: '#/definitions/entities.Vote'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http_response.ErrorResponse'
            - properties:
                error:
                  $ref: '#/definitions/http_response.ErrorResult'
              type: object
      summary: Return paginated list of votes for votingID
      tags:
      - Vote
produces:
- application/json
swagger: "2.0"
