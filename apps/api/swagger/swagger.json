{
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "title": "Casper-CRDao API",
        "contact": {},
        "version": "0.0.1"
    },
    "paths": {
        "/accounts": {
            "get": {
                "tags": [
                    "Vote"
                ],
                "summary": "Return paginated list of accounts",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "10",
                        "description": "Number of items per page",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entities.Account"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/accounts/{address}": {
            "get": {
                "tags": [
                    "Vote"
                ],
                "summary": "Return account by its address",
                "parameters": [
                    {
                        "maxLength": 66,
                        "type": "string",
                        "description": "Hash or PublicKey",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entities.Account"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/accounts/{address}/total-reputation-snapshots": {
            "get": {
                "tags": [
                    "Reputation"
                ],
                "summary": "Return paginated list of total-reputation-snapshots for account",
                "parameters": [
                    {
                        "maxLength": 66,
                        "type": "string",
                        "description": "Hash or PublicKey",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entities.TotalReputationSnapshot"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/accounts/{address}/votes": {
            "get": {
                "tags": [
                    "Vote"
                ],
                "summary": "Return paginated list of votes for address",
                "parameters": [
                    {
                        "maxLength": 66,
                        "type": "string",
                        "description": "Hash or PublicKey",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Optional fields' schema (voting{})",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "10",
                        "description": "Number of items per page",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "type": "string",
                        "default": "ASC",
                        "description": "Sorting direction",
                        "name": "order_direction",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": "voting_id",
                        "description": "Comma-separated list of sorting fields (voting_id,address)",
                        "name": "order_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entities.Vote"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/bids/{bid_id}/job": {
            "get": {
                "tags": [
                    "BidEscrow"
                ],
                "summary": "Return Job by BidID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "BidID uint",
                        "name": "bid_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entities.Job"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/job-offers": {
            "get": {
                "tags": [
                    "BidEscrow"
                ],
                "summary": "Return paginated list of votes for votingID",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "10",
                        "description": "Number of items per page",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "type": "string",
                        "default": "ASC",
                        "description": "Sorting direction",
                        "name": "order_direction",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": "voting_id",
                        "description": "Comma-separated list of sorting fields (job_offer_id)",
                        "name": "order_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entities.JobOffer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/job-offers/{job_offer_id}/bids": {
            "get": {
                "tags": [
                    "BidEscrow"
                ],
                "summary": "Return paginated list of bid for JobOffer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "JobOfferID uint",
                        "name": "job_offer_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "10",
                        "description": "Number of items per page",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "type": "string",
                        "default": "ASC",
                        "description": "Sorting direction",
                        "name": "order_direction",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": "voting_id",
                        "description": "Comma-separated list of sorting fields (job_offer_id)",
                        "name": "order_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entities.Bid"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/job-statuses": {
            "get": {
                "tags": [
                    "BidEscrow"
                ],
                "summary": "Return predefined list of JobStatuses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entities.Job"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/jobs/{job_id}": {
            "get": {
                "tags": [
                    "BidEscrow"
                ],
                "summary": "Return Job by JobIF",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "JobID uint",
                        "name": "job_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entities.Job"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/settings": {
            "get": {
                "tags": [
                    "Setting"
                ],
                "summary": "Return paginated list of settings",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "10",
                        "description": "Number of items per page",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "type": "string",
                        "default": "ASC",
                        "description": "Sorting direction",
                        "name": "order_direction",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": "voting_id",
                        "description": "Comma-separated list of sorting fields (name)",
                        "name": "order_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entities.Setting"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/votings": {
            "get": {
                "tags": [
                    "Voting"
                ],
                "summary": "Return paginated list of votings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Optional fields' schema (votes_number{}, account_vote(hash))",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "10",
                        "description": "Number of items per page",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "type": "string",
                        "default": "ASC",
                        "description": "Sorting direction",
                        "name": "order_direction",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": "voting_id",
                        "description": "Comma-separated list of sorting fields (voting_id)",
                        "name": "order_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entities.Voting"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/votings/{voting_id}/votes": {
            "get": {
                "tags": [
                    "Vote"
                ],
                "summary": "Return paginated list of votes for votingID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comma-separated list of VotingIDs (number)",
                        "name": "voting_id",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "Is formal/informal filtering",
                        "name": "is_formal",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Optional fields' schema (voting{})",
                        "name": "includes",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "10",
                        "description": "Number of items per page",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "type": "string",
                        "default": "ASC",
                        "description": "Sorting direction",
                        "name": "order_direction",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": "voting_id",
                        "description": "Comma-separated list of sorting fields (voting_id, address)",
                        "name": "order_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entities.Vote"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http_response.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/http_response.ErrorResult"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entities.Account": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "is_kyc": {
                    "type": "boolean"
                },
                "is_va": {
                    "type": "boolean"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "entities.AuctionTypeID": {
            "type": "integer",
            "enum": [
                1,
                2
            ],
            "x-enum-varnames": [
                "AuctionTypeIDInternal",
                "AuctionTypeIDExternal"
            ]
        },
        "entities.Bid": {
            "type": "object",
            "properties": {
                "bid_id": {
                    "type": "integer"
                },
                "cspr_stake": {
                    "type": "integer"
                },
                "deploy_hash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "job_offer_id": {
                    "type": "integer"
                },
                "onboard": {
                    "type": "boolean"
                },
                "picked_by_job_poster": {
                    "type": "boolean"
                },
                "proposed_payment": {
                    "type": "integer"
                },
                "proposed_time_frame": {
                    "type": "integer"
                },
                "reputation_stake": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "worker": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "entities.Job": {
            "type": "object",
            "properties": {
                "bid_id": {
                    "type": "integer"
                },
                "caller": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "deploy_hash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "finish_time": {
                    "type": "integer"
                },
                "job_id": {
                    "type": "integer"
                },
                "job_poster": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "job_status_id": {
                    "$ref": "#/definitions/entities.JobStatusID"
                },
                "result": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "worker": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "entities.JobOffer": {
            "type": "object",
            "properties": {
                "auction_type_id": {
                    "$ref": "#/definitions/entities.AuctionTypeID"
                },
                "deploy_hash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "expected_time_frame": {
                    "type": "integer"
                },
                "job_offer_id": {
                    "type": "integer"
                },
                "job_poster": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "max_budget": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "entities.JobStatusID": {
            "type": "integer",
            "enum": [
                1,
                2,
                3,
                4,
                5
            ],
            "x-enum-varnames": [
                "JobStatusIDCreated",
                "JobStatusIDSubmitted",
                "JobStatusIDCancelled",
                "JobStatusIDDone",
                "JobStatusIDRejected"
            ]
        },
        "entities.ReputationChangeReason": {
            "type": "integer",
            "enum": [
                1,
                2,
                3,
                4,
                5,
                6
            ],
            "x-enum-varnames": [
                "ReputationChangeReasonMinted",
                "ReputationChangeReasonBurned",
                "ReputationChangeReasonStaked",
                "ReputationChangeReasonVotingGained",
                "ReputationChangeReasonVotingLost",
                "ReputationChangeReasonUnstaked"
            ]
        },
        "entities.Setting": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "entities.TotalReputationSnapshot": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "deploy_hash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "reason": {
                    "$ref": "#/definitions/entities.ReputationChangeReason"
                },
                "timestamp": {
                    "type": "string"
                },
                "total_liquid_reputation": {
                    "type": "integer"
                },
                "total_staked_reputation": {
                    "type": "integer"
                },
                "voting_earned_reputation": {
                    "type": "integer"
                },
                "voting_id": {
                    "type": "integer"
                },
                "voting_lost_reputation": {
                    "type": "integer"
                }
            }
        },
        "entities.Vote": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "amount": {
                    "type": "integer"
                },
                "deploy_hash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "is_canceled": {
                    "type": "boolean"
                },
                "is_formal": {
                    "type": "boolean"
                },
                "is_in_favour": {
                    "type": "boolean"
                },
                "timestamp": {
                    "type": "string"
                },
                "voting_id": {
                    "type": "integer"
                }
            }
        },
        "entities.Voting": {
            "type": "object",
            "properties": {
                "config_time_between_informal_and_formal_voting": {
                    "type": "integer"
                },
                "config_total_onboarded": {
                    "type": "integer"
                },
                "config_voting_clearness_delta": {
                    "type": "integer"
                },
                "creator": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "deploy_hash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "formal_voting_ends_at": {
                    "type": "string"
                },
                "formal_voting_quorum": {
                    "type": "integer"
                },
                "formal_voting_result": {
                    "type": "integer"
                },
                "formal_voting_starts_at": {
                    "type": "string"
                },
                "formal_voting_time": {
                    "type": "integer"
                },
                "informal_voting_ends_at": {
                    "type": "string"
                },
                "informal_voting_quorum": {
                    "type": "integer"
                },
                "informal_voting_result": {
                    "type": "integer"
                },
                "informal_voting_starts_at": {
                    "type": "string"
                },
                "is_canceled": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "voting_id": {
                    "type": "integer"
                },
                "voting_type_id": {
                    "$ref": "#/definitions/entities.VotingTypeID"
                }
            }
        },
        "entities.VotingTypeID": {
            "type": "integer",
            "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8
            ],
            "x-enum-varnames": [
                "VotingTypeSimple",
                "VotingTypeSlashing",
                "VotingTypeKYC",
                "VotingTypeRepo",
                "VotingTypeReputation",
                "VotingTypeOnboarding",
                "VotingTypeAdmin",
                "VotingTypeBidEscrow"
            ]
        },
        "http_response.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/http_response.ErrorResult"
                }
            }
        },
        "http_response.ErrorResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "http_response.PaginatedResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "item_count": {
                    "type": "integer"
                },
                "page_count": {
                    "type": "integer"
                }
            }
        },
        "http_response.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {}
            }
        }
    }
}